import{A as Bt,B as Dt,C as Gt,D as $t,E as Lt,F as Ut,G as Qt,H as Wt,I as Ie,J as _t,K as Y,L as Z,a as St,b as kt,c as Pt,d as ke,e as A,f as W,g as It,h as _,i as Nt,j as Rt,k as K,l as Et,m as Pe,n as X,o as q,q as J,r as z,s as H,v as At,w as Ot,x as Vt,y as Mt,z as Ft}from"./chunk-KONOGX73.js";import{a as j,b as ee}from"./chunk-IJ3LAAJO.js";import{computed as O,observable as Ae,toJS as Oe}from"mobx";import{Wallet as Ne}from"ethers";function te(e,t){return new Ne(e,t.json)}import{combineLatest as Ve,concatMap as Me,EMPTY as Fe,filter as ne,map as Be,throttleTime as De}from"rxjs";import{ReplaySubject as Re}from"rxjs";function re(e){let{initialTime:t,period:s}=e,r={currentTime:t,lastUpdateTime:t,time$:new Re(1),dispose:()=>clearInterval(a),update:o},a=c();i();function i(){r.time$.next(r.currentTime)}function c(){return setInterval(()=>{r.currentTime+=s,i()},s)}function o(u){clearInterval(a),r.currentTime=u,r.lastUpdateTime=u,i(),a=c()}return r}import{Wallet as oe}from"ethers";import{computedToStream as Ge}from"@latticexyz/utils";import{privateKeyToAccount as $e}from"viem/accounts";import{fallback as ie,webSocket as se,http as ae,createPublicClient as Le,createWalletClient as Ue}from"viem";import*as Qe from"@latticexyz/common/chains";import*as We from"viem/chains";async function ur(e){let t=Ae(e),s=[],{providers:r,connected:a,dispose:i}=await X(O(()=>Oe(t.provider)));s.push(i);let c=O(()=>{let n=r.get();if(t.provider.externalProvider)return n.json.getSigner();let p=t.privateKey;if(p&&n)return te(p,n)}),o=t.provider.externalProvider?await c.get()?.getAddress():void 0,u=O(()=>t.privateKey?new oe(t.privateKey).address.toLowerCase():o?.toLowerCase()),y=O(()=>t.privateKey?new oe(t.privateKey).address:o),{blockNumber$:b,dispose:w}=q(r);s.push(w);let g=re(t.clock);s.push(g.dispose);let h=Ve([b,Ge(r)]).pipe(De(t.clock.syncInterval,void 0,{leading:!0,trailing:!0}),Me(([n,p])=>p?_(p.json,n):Fe),Be(n=>n.timestamp*1e3),ne(n=>n!==g.lastUpdateTime),ne(n=>n!==g.currentTime)).subscribe(g.update);s.push(()=>h?.unsubscribe());try{let n=Object.values({...Qe,...We});t.chainConfig&&n.unshift(t.chainConfig);let p=n.find(f=>f.id===t.chainId);if(!p)throw new Error(`No chain found for chain ID ${t.chainId}`);let C=Le({chain:p,transport:ie([se(),ae()]),pollingInterval:t.provider.options?.pollingInterval??t.clock.period??1e3}),d=t.privateKey?$e(t.privateKey):null,m=d?Ue({account:d,chain:p,transport:ie([se(),ae()]),pollingInterval:t.provider.options?.pollingInterval??t.clock.period??1e3}):null;z.next(C),H.next(m)}catch(n){console.error("Could not initialize viem clients, dev tools may not work:",n)}return{providers:r,signer:c,connected:a,blockNumber$:b,dispose:()=>{for(let n of s)n()},clock:g,config:t,connectedAddress:u,connectedAddressChecksummed:y}}import{Contract as ce}from"ethers";import{computed as V}from"mobx";import{mapObject as ue}from"@latticexyz/utils";async function gr({config:e,asyncConfig:t,signerOrProvider:s}){let r=V(()=>ue(e,c=>c&&new ce(c.address,c.abi,s.get())));if(!t)return{contracts:r,config:e};let a=await t(r.get()),i=V(()=>ue(a,c=>c&&new ce(c.address,c.abi,s.get())));return{contracts:V(()=>({...r.get(),...i.get()})),config:{...e,...a}}}import{BaseContract as _e}from"ethers";import{autorun as Ke,computed as M,observable as Xe,runInAction as F}from"mobx";import{mapObject as me,deferred as qe,uuid as Je,awaitValue as ze,cacheUntilReady as He}from"@latticexyz/utils";import{Mutex as Ye}from"async-mutex";function pe(e,t,s,r){let{concurrency:a}=r||{},i=je(),c=new Ye,o=Xe.box(null),u=M(()=>{let m=t.connected.get(),f=e.get(),l=t.signer.get(),v=t.providers.get()?.json,x=o.get();if(!(m!==2||!f||!l||!v||x==null))return{contracts:f,signer:l,provider:v,nonce:x}}),y=0;async function b(){F(()=>o.set(null));let m=await t.signer.get()?.getTransactionCount()??null;F(()=>o.set(m))}let w=Ke(b);function g(){F(()=>{let m=o.get(),f=m==null?null:m+1;o.set(f)})}function h(m,f,l){let[v,x,P]=qe(),T=l.length>0&&Ze(l[l.length-1]),I=T?l[l.length-1]:{},R=T?l.slice(0,l.length-1):l,D=m.interface.fragments.find(S=>S.name===f),we=D&&D.stateMutability,G=I.gasLimit,ve=G==null?()=>m.estimateGas[f](...l):()=>G,xe=async(S,Se)=>{try{let k=m.populateTransaction[f];if(k==null)throw new Error("Member does not exist.");if(!(k instanceof Function))throw new Error(`Internal TxQueue error: Member is not a function and should not be proxied. Tried to call "${String(f)}".`);let $={gasPrice:s.getValue(),...I,nonce:S,gasLimit:Se};r?.devMode&&($.gasPrice=0);let E=await k(...R,$);E.nonce=S,E.chainId=t.config.chainId;let N;try{let Q=await m.signer.signTransaction(E);N=await m.provider.perform("sendTransaction",{signedTransaction:Q})}catch{N=(await m.signer.sendTransaction(E)).hash}let L=m.provider.getTransaction(N),U=async()=>(await L).wait();return v({hash:N,wait:U,response:L}),{hash:N,wait:U}}catch(k){throw x(k),k}};return i.add(Je(),{execute:xe,estimateGas:ve,cancel:S=>x(S??new Error("TX_CANCELLED")),stateMutability:we}),n(),P}async function n(){if(a!=null&&y>=a)return;let m=i.next();if(!m)return;y++,n();let f=await c.runExclusive(async()=>{let l,v=m.stateMutability,x;try{x=await m.estimateGas()}catch(T){return console.error("[TXQueue] GAS ESTIMATION ERROR",T),m.cancel(T)}let{nonce:P}=await ze(u);try{return await m.execute(P,x)}catch(T){console.warn("[TXQueue] TXQUEUE EXECUTION FAILED",T),l=T}finally{let T=l&&"transaction"in l&&!("insufficient funds"in l)&&!("mispriced"in l)&&m.stateMutability!=="view",I=!l&&v!=="view"||T,R=l&&("code"in l&&l.code==="NONCE_EXPIRED"||JSON.stringify(l).includes("transaction already imported"));console.log(`[TXQueue] TX Sent (error=${!!l}, isMutationError=${!!T} incNonce=${!!I} resetNonce=${!!R})`),I&&g(),R&&await b(),l&&m.cancel(l)}});if(f?.hash)try{await f.wait()}catch(l){console.warn("[TXQueue] tx failed in block",l),K(f.hash,t.providers.get().json).then(T=>console.warn("[TXQueue] Revert reason:",T)).catch(T=>"This transaction didn't make it into a block. Was it mispriced?");let P=`mud trace --config deploy.json --world ${new URLSearchParams(window.location.search).get("worldAddress")} --tx ${f.hash}`;console.log("---------- DEBUG COMMANDS (RUN IN TERMINAL) -------------"),console.log("Trace:"),console.log(P),console.log("---------------------------------------------------------")}y--,n()}function p(m){return me(m,(f,l)=>l in _e.prototype||!(f instanceof Function)?f:(...v)=>h(m,l,v))}let C=M(()=>{let m=u.get()?.contracts;if(m)return me(m,p)});return{txQueue:He(C),dispose:w,ready:M(()=>u?!0:void 0)}}function Ze(e){return typeof e!="object"||Array.isArray(e)||e===null?!1:"gasLimit"in e||"gasPrice"in e||"maxFeePerGas"in e||"maxPriorityFeePerGas"in e||"nonce"in e||"type"in e||"accessList"in e||"customData"in e||"value"in e||"blockTag"in e||"from"in e}function je(){let e=new Map;function t(){return[...e.entries()].sort((o,u)=>o[1].priority>=u[1].priority?-1:1)}function s(o,u,y=1){e.set(o,{element:u,priority:y})}function r(o){e.delete(o)}function a(o,u){let y=e.get(o);y&&e.set(o,{...y,priority:u})}function i(){if(e.size===0)return;let[o,u]=t()[0];return e.delete(o),u.element}function c(){return e.size}return{add:s,remove:r,setPriority:a,next:i,size:c}}import{map as et,Subject as le,timer as tt}from"rxjs";function Fr(e,t){let s=t?.thread||"worker",r=new le,a=new le;e=e||tt(0,16).pipe(et(()=>Y));let i=e.subscribe(r),c=new Z().work(r).subscribe(a);return{ecsEvents$:a,input$:r,dispose:()=>{c?.unsubscribe(),i?.unsubscribe()}}}import{ethers as B,VoidSigner as rt}from"ethers";function Gr(e){let t=[];for(let s of Object.keys(e)){let{abi:r,topics:a}=e[s],i=new B.Contract(B.constants.AddressZero,r,new rt(B.constants.AddressZero)),c=[a.map(o=>i.filters[o]().topics).map(o=>(o||[])[0])];t.push({key:s,topics:c})}return t}import{BigNumber as nt}from"ethers";import{defaultAbiCoder as ot}from"ethers/lib/utils.js";function de(e,t){if(Array.isArray(e))return e.map(s=>de(s,W[t]));if(typeof e=="number"||typeof e=="string"||typeof e=="boolean")return e;if(e=nt.from(e),[1,2,3,8,9,10].includes(t))return e.toNumber();if([4,5,6,11,12,13,14,16,17].includes(t))return e.toHexString();if([15].includes(t))return e.toString();throw new Error("Unknown value type")}function Kr(e,t){return s=>{let r=ot.decode(t.map(i=>A[i]),s);if(e.length!==t.length)throw new Error("Component schema keys and values length does not match");let a={};for(let i=0;i<e.length;i++)a[e[i]]=de(r[i],t[i]);return a}}import{defaultAbiCoder as it}from"ethers/lib/utils.js";function Hr(e,t){return s=>{let r=[],a=Object.values(s);for(let i of Object.keys(s)){let c=e.findIndex(o=>o===i);r.push(A[t[c]])}return it.encode(r,a)}}import{getComponentEntities as st,getComponentValue as at}from"@latticexyz/recs";import{deferred as ct,keccak256 as fe,toEthAddress as ut}from"@latticexyz/utils";import{Contract as mt}from"ethers";import{observable as pt,runInAction as ye}from"mobx";function mn(e,t,s,r,a,i){let c=pt.box({}),o=Object.keys(r).reduce((n,p)=>({...n,[fe(p)]:p}),{});function u(n){let[p,,C]=ct();return ye(()=>{c.set({...c.get(),[n.id]:n.contract}),o[fe(n.id)]=n.id,p()}),C}let y={};for(let n of st(s)){let p=h(n,t.signer.get());p&&(y[p.id]=p.contract)}ye(()=>c.set(y)),s.update$.subscribe(n=>{if(!n.value[0])return;let p=h(n.entity,t.signer.get());p&&u(p)});let{txQueue:b,dispose:w}=pe(c,t,a,i);return e.registerDisposer(w),{systems:b,registerSystem:u,getSystemContract:g};function g(n){let p=o[n];return{name:p,contract:c.get()[p]}}function h(n,p){let{value:C}=at(s,n)||{};if(!C)throw new Error("System entity not found");let d=o[C];if(!d){console.warn("Unknown system:",C);return}return{id:d,contract:new mt(ut(n),r[d],p)}}}import{from as ge,map as lt,Subject as dt}from"rxjs";import{createChannel as Ce,createClient as be}from"nice-grpc-web";import{awaitStreamValue as ft}from"@latticexyz/utils";import{grpc as yt}from"@improbable-eng/grpc-web";import{ECSRelayServiceDefinition as he}from"@latticexyz/services/ecs-relay";async function vn(e,t,s){let r=be(he,Ce(t)),a=be(he,Ce(t,yt.WebsocketTransport())),i={signature:await e.signMessage("ecs-relay-service")};await r.authenticate(i);let c=ge(a.openStream(i)).pipe(lt(async d=>({message:d,address:await ee(d)})));function o(d){r.subscribe({signature:i,subscription:{label:d}})}function u(d){r.unsubscribe({signature:i,subscription:{label:d}})}async function y(){let{count:d}=await r.countConnected({});return d}let b=new dt,w={done:!1};async function*g(){for(;!w.done;)yield await ft(b)}let h=ge(a.pushStream(g())).subscribe();function n(){w.done=!0,h?.unsubscribe()}async function p(d,m){let f={version:1,id:Date.now()+s,timestamp:Date.now(),data:m,signature:""};f.signature=await e.signMessage(j(f)),b.next({label:d,message:f})}function C(){return r.ping(i)}return{event$:c,dispose:n,subscribe:o,unsubscribe:u,push:p,countConnected:y,ping:C}}import{FaucetServiceDefinition as gt}from"@latticexyz/services/faucet";import{createChannel as Ct,createClient as bt}from"nice-grpc-web";function In(e){return bt(gt,Ct(e))}async function Rn(e,t={priorityFeeMultiplier:1}){let s=await e.getChainId(),r={nonce:await e.getTransactionCount()},a={};await c(t.priorityFeeMultiplier);async function i(o,u,y,b={retryCount:0}){let w=`${u}(${y.map(g=>`'${g}'`).join(",")})`;console.log(`executing transaction: ${w} with nonce ${r.nonce}`);try{let{argsWithoutOverrides:g,overrides:h}=ht(y),p={type:2,gasLimit:h.gasLimit??await o.estimateGas[u].apply(null,y),nonce:r.nonce++,...a,...h},C=await o.populateTransaction[u](...g,p);C.chainId=s;let d;try{let f=await e.signTransaction(C);d=await e.provider.perform("sendTransaction",{signedTransaction:f})}catch(f){console.warn("signing failed, falling back to sendTransaction",f),d=(await e.sendTransaction(C)).hash}J.next(d);let m=e.provider.getTransaction(d);return{hash:d,tx:m}}catch(g){if(g?.message.includes("transaction already imported")){if(b.retryCount===0)return c(t.priorityFeeMultiplier*1.1),i(o,u,y,{retryCount:b.retryCount++});throw new Error(`Gas estimation error for ${w}: ${g?.reason}`)}throw g}}async function c(o){let u=await e.provider.getFeeData();if(!u.lastBaseFeePerGas)throw new Error("Can not fetch lastBaseFeePerGas from RPC");a.maxPriorityFeePerGas=u.lastBaseFeePerGas.eq(0)?0:Math.floor(15e8*o),a.maxFeePerGas=u.lastBaseFeePerGas.mul(2).add(a.maxPriorityFeePerGas)}return{fastTxExecute:i,updateFeePerGas:c,gasConfig:a,currentNonce:r}}function ht(e){let t=e.length>0&&Tt(e[e.length-1]),s=t?e[e.length-1]:{};return{argsWithoutOverrides:t?e.slice(0,e.length-1):e,overrides:s}}function Tt(e){return typeof e!="object"||Array.isArray(e)||e===null?!1:"gasLimit"in e||"gasPrice"in e||"maxFeePerGas"in e||"maxPriorityFeePerGas"in e||"nonce"in e||"type"in e||"accessList"in e||"customData"in e||"value"in e||"blockTag"in e||"from"in e}import{TableId as wt}from"@latticexyz/common";var Te=[{inputs:[{internalType:"bytes32",name:"tableId",type:"bytes32"}],name:"snapSync_system_getNumKeysInTable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"tableId",type:"bytes32"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"offset",type:"uint256"}],name:"snapSync_system_getRecords",outputs:[{components:[{internalType:"bytes32",name:"tableId",type:"bytes32"},{internalType:"bytes32[]",name:"keyTuple",type:"bytes32[]"},{internalType:"bytes",name:"value",type:"bytes"}],internalType:"struct SyncRecord[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"}];import{Contract as vt}from"ethers";async function Dn(e,t,s,r){let a=new vt(e,Te,r),i=100,c=t.map(u=>u.toHex()),o=[];for(let u of c){let y=(await a.callStatic.snapSync_system_getNumKeysInTable(u,{blockTag:s})).toNumber();if(y===0)continue;let b=y,w=Math.ceil(y/i);for(let g=0;g<w;g++){let h=Math.min(b,i),n=g*i;b-=h;let C=(await a.callStatic.snapSync_system_getRecords(u,h,n,{blockTag:s})).map(d=>({tableId:wt.fromHex(d[0]),keyTuple:d[1],value:d[2]}));o.push(...C)}}return o}export{Pe as ConnectionState,ke as ContractSchemaValue,W as ContractSchemaValueArrayToElement,A as ContractSchemaValueId,Wt as GodID,_t as InputType,St as NetworkEvents,Qt as SingletonID,Ut as SyncState,Z as SyncWorker,Y as ack,q as createBlockNumberStream,Ot as createCacheStore,gr as createContracts,Kr as createDecoder,Hr as createEncoder,Rn as createFastTxExecutor,In as createFaucetService,ur as createNetwork,Et as createProvider,X as createReconnectingProvider,vn as createRelayStream,te as createSigner,Fr as createSyncWorker,mn as createSystemExecutor,Gr as createTopics,pe as createTxQueue,It as ensureNetworkIsUp,_ as fetchBlock,Rt as fetchEventsInBlockRange,Nt as fetchLogs,de as flattenValue,At as getCacheId,Ft as getCacheStoreEntries,$t as getIndexDBCacheStoreBlockNumber,Lt as getIndexDbECSCache,K as getRevertReason,Dn as getSnapSyncRecords,Pt as isNetworkComponentUpdateEvent,kt as isSystemCallEvent,Ie as keyTupleToEntityID,Gt as loadIndexDbCacheStore,Bt as mergeCacheStores,j as messagePayload,Dt as saveCacheStoreToIndexDb,Vt as storeEvent,Mt as storeEvents};
//# sourceMappingURL=index.js.map