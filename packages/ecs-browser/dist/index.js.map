{"version":3,"sources":["../src/Browser.tsx","../src/StyledComponents.ts","../src/EntityEditor.tsx","../src/ComponentEditor.tsx","../src/ValueEditor.tsx","../src/DraggableNumberLabel.tsx","../src/types.ts","../src/ComponentValueEditor.tsx","../src/QueryBuilder/QueryBuilder.tsx","../src/QueryBuilder/StyledComponents.ts","../src/hooks.ts","../src/createBrowserDevComponents.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Layers, Type, Component, Schema, World, Entity } from \"@latticexyz/recs\";\nimport { BrowserContainer, SmallHeadline } from \"./StyledComponents\";\nimport { SetContractComponentFunction } from \"./types\";\nimport { EntityEditor } from \"./EntityEditor\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { useClearDevHighlights } from \"./hooks\";\nimport { observer } from \"mobx-react-lite\";\nimport { Coord } from \"./shared\";\nimport { createBrowserDevComponents } from \"./createBrowserDevComponents\";\n\n/**\n * An Entity Browser for viewing/editiing Component values.\n */\nexport const Browser = observer(\n  ({\n    layers,\n    setContractComponentValue,\n    world,\n    devHighlightComponent,\n  }: {\n    layers: Layers;\n    setContractComponentValue?: SetContractComponentFunction<Schema>;\n    prototypeComponent?: Component<{ value: Type.StringArray }>;\n    nameComponent?: Component<{ value: Type.String }>;\n    spawnPrototypeAt?: (prototypeId: Entity, position: Coord) => void;\n    world: World;\n    devHighlightComponent: ReturnType<typeof createBrowserDevComponents>[\"devHighlightComponent\"];\n    hoverHighlightComponent: ReturnType<typeof createBrowserDevComponents>[\"hoverHighlightComponent\"];\n  }) => {\n    const [filteredEntities, setFilteredEntities] = useState<Entity[]>([]);\n    const [overflow, setOverflow] = useState(0);\n    const clearDevHighlights = useClearDevHighlights(devHighlightComponent);\n\n    return (\n      <BrowserContainer>\n        <QueryBuilder\n          devHighlightComponent={devHighlightComponent}\n          allEntities={[...world.getEntities()]}\n          setFilteredEntities={setFilteredEntities}\n          layers={layers}\n          world={world}\n          clearDevHighlights={clearDevHighlights}\n          setOverflow={setOverflow}\n        />\n        <SmallHeadline>\n          Showing {filteredEntities.length} of {filteredEntities.length + overflow} entities\n        </SmallHeadline>\n        {filteredEntities.map((entity) => (\n          <EntityEditor\n            world={world}\n            key={`entity-editor-${entity}`}\n            entityId={entity}\n            layers={layers}\n            setContractComponentValue={setContractComponentValue}\n            devHighlightComponent={devHighlightComponent}\n            clearDevHighlights={clearDevHighlights}\n          />\n        ))}\n      </BrowserContainer>\n    );\n  }\n);\n","import { setup, styled } from \"goober\";\nimport React from \"react\";\nimport { createElement } from \"react\";\n\nsetup(createElement);\n\nexport const ComponentBrowserInput = styled(\"input\", React.forwardRef)`\n  background-color: #383c4a;\n  color: #8c91a0;\n  border: 1px rgba(0, 0, 0, 0.5) solid;\n  border-radius: 4px;\n  padding: 4px;\n  padding-left: 8px;\n  margin: 8px 0;\n\n  &:focus {\n    outline: none;\n    border: 1px #8c91a0 solid;\n  }\n  ::selection {\n    color: white;\n    background: rgba(70, 89, 182, 0.9);\n  }\n`;\n\nexport const ComponentBrowserButton = styled(\"button\")<{ active?: string }>`\n  background-color: ${({ active }) => (active === \"true\" ? \"#8c91a0\" : \"#383c4a\")};\n  color: ${({ active }) => (active === \"true\" ? \"#383c4a\" : \"#8c91a0\")};\n  border: 1px rgba(0, 0, 0, 0.5) solid;\n  border-radius: 4px;\n  padding: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #8c91a0;\n    color: #383c4a;\n  }\n`;\n\nexport const ComponentBrowserSelect = styled(\"select\")`\n  width: 180px;\n  background-color: #383c4a;\n  color: #8c91a0;\n  border: 1px rgba(0, 0, 0, 0.5) solid;\n  border-radius: 4px;\n  padding: 4px;\n`;\n\nexport const ValueForm = styled(\"form\")`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ComponentEditorContainer = styled(\"div\")`\n  margin: 8px auto;\n`;\n\nexport const ComponentTitle = styled(\"div\")`\n  color: white;\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const EntityEditorContainer = styled(\"div\")`\n  border-bottom: 1px #8c91a0 solid;\n  padding: 8px;\n`;\n\nexport const BrowserContainer = styled(\"div\")`\n  overflow: auto;\n  background-color: rgba(27, 28, 32, 1);\n  color: #8c91a0;\n  height: 100%;\n  pointer-events: all;\n`;\n\nexport const DraggableNumberLabelContainer = styled(\"label\")`\n  cursor: ew-resize;\n  user-select: none;\n  color: #8c91a0;\n`;\n\nexport const SmallHeadline = styled(\"p\")`\n  padding: 8px;\n  font-size: 14px;\n`;\n\nexport const Collapse = styled(\"div\")<{ opened: string }>`\n  height: ${({ opened }) => (opened === \"true\" ? \"auto\" : \"0px\")};\n  overflow: ${({ opened }) => (opened === \"true\" ? \"initial\" : \"hidden\")};\n`;\n\nexport const SyntaxHighlighterWrapper = styled(\"div\")`\n  .shiki {\n    background-color: #282a36;\n\n    font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n\n    line-height: 1.5;\n    tab-size: 4;\n    hyphens: none;\n    padding: 1em;\n    margin: 0.5em 0px;\n    overflow: auto;\n    border-radius: 0.3em;\n    overflow: auto;\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n    text-shadow: rgba(0, 0, 0, 0.3) 0px 1px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Layers,\n  setComponent,\n  Type,\n  AnyComponent,\n  Component,\n  Schema,\n  World,\n  getEntityComponents,\n  Entity,\n} from \"@latticexyz/recs\";\nimport { Collapse, ComponentBrowserButton, EntityEditorContainer } from \"./StyledComponents\";\nimport { SetContractComponentFunction } from \"./types\";\nimport { ComponentEditor } from \"./ComponentEditor\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const EntityEditor = observer(\n  ({\n    entityId,\n    layers,\n    setContractComponentValue,\n    devHighlightComponent,\n    world,\n    clearDevHighlights,\n  }: {\n    entityId: Entity;\n    layers: Layers;\n    setContractComponentValue?: SetContractComponentFunction<Schema>;\n    devHighlightComponent: Component<{ value: Type.OptionalNumber }>;\n    world: World;\n    clearDevHighlights: () => void;\n  }) => {\n    const [opened, setOpened] = useState(false);\n\n    const [entityComponents, setEntityComponents] = useState<AnyComponent[]>([]);\n    useEffect(() => {\n      if (opened) {\n        const components = getEntityComponents(world, entityId);\n        setEntityComponents(components);\n      }\n    }, [opened, world, entityId, setEntityComponents]);\n\n    return (\n      <EntityEditorContainer\n        onMouseEnter={() => {\n          clearDevHighlights();\n          setComponent(devHighlightComponent, entityId, {\n            value: undefined,\n          });\n        }}\n        onMouseLeave={() => clearDevHighlights()}\n      >\n        <div onClick={() => setOpened(!opened)} style={{ cursor: \"pointer\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n            <h3 style={{ color: \"white\" }}>Entity {entityId}</h3>\n            <ComponentBrowserButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(entityId);\n              }}\n            >\n              Click to copy Entity ID\n            </ComponentBrowserButton>\n          </div>\n          <ComponentBrowserButton onClick={() => setOpened(!opened)}>\n            {opened ? <>&#9660;</> : <>&#9654;</>}\n          </ComponentBrowserButton>\n        </div>\n        <Collapse aria-hidden={opened ? \"false\" : \"true\"} opened={String(opened)}>\n          {[...entityComponents.values()]\n            .filter((c) => c.id !== devHighlightComponent.id)\n            .map((c) => (\n              <ComponentEditor\n                key={`component-editor-${entityId}-${c.id}`}\n                entity={entityId}\n                component={c}\n                layers={layers}\n                setContractComponentValue={setContractComponentValue}\n              />\n            ))}\n        </Collapse>\n      </EntityEditorContainer>\n    );\n  }\n);\n","import React from \"react\";\nimport { Layers, removeComponent } from \"@latticexyz/recs\";\nimport { AnyComponent, Entity, Schema } from \"@latticexyz/recs/src/types\";\nimport { ComponentBrowserButton, ComponentEditorContainer, ComponentTitle } from \"./StyledComponents\";\nimport { ComponentValueEditor } from \"./ComponentValueEditor\";\nimport { hasContract, SetContractComponentFunction } from \"./types\";\nimport { useComponentValueStream } from \"@latticexyz/std-client\";\n\nexport const ComponentEditor = ({\n  entity,\n  component,\n  layers,\n  setContractComponentValue,\n}: {\n  entity: Entity;\n  component: AnyComponent;\n  layers: Layers;\n  setContractComponentValue?: SetContractComponentFunction<Schema>;\n}) => {\n  const value = useComponentValueStream(component, entity);\n  if (!value) return null;\n\n  return (\n    <ComponentEditorContainer>\n      <ComponentTitle>\n        {component.id}\n        <ComponentBrowserButton\n          onClick={() => {\n            removeComponent(component, entity);\n\n            if (setContractComponentValue && hasContract(component)) setContractComponentValue(entity, component, {});\n          }}\n        >\n          Remove\n        </ComponentBrowserButton>\n      </ComponentTitle>\n      <ComponentValueEditor\n        entity={entity}\n        component={component}\n        componentValue={value}\n        layers={layers}\n        setContractComponentValue={setContractComponentValue}\n      />\n    </ComponentEditorContainer>\n  );\n};\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Entity, getComponentValueStrict, Layers, Type, updateComponent } from \"@latticexyz/recs\";\nimport {\n  AnyComponent,\n  ComponentValue,\n  isArrayType,\n  isEntityType,\n  isNumberType,\n  isOptionalType,\n  Schema,\n} from \"@latticexyz/recs\";\nimport startCase from \"lodash/startCase\";\nimport { ComponentBrowserInput, ComponentBrowserSelect, ValueForm } from \"./StyledComponents\";\nimport { DraggableNumberLabel } from \"./DraggableNumberLabel\";\nimport { hasContract, SetContractComponentFunction } from \"./types\";\n\nexport const ValueEditor = ({\n  entity,\n  component,\n  componentValue,\n  valueProp,\n  layers,\n  setContractComponentValue,\n}: {\n  entity: Entity;\n  component: AnyComponent;\n  componentValue: ComponentValue<Schema>;\n  valueProp: string;\n  layers: Layers;\n  setContractComponentValue?: SetContractComponentFunction<Schema>;\n}) => {\n  const [value, setValue] = useState<string | null>(componentValue[valueProp]?.toString() as string | null);\n\n  useEffect(() => {\n    const v = componentValue[valueProp];\n    setValue(v as string | null);\n  }, [componentValue, valueProp]);\n\n  const inputType = useMemo(() => {\n    const type = component.schema[valueProp];\n    if (isNumberType(type)) {\n      return \"number\";\n    } else if (isEntityType(type)) {\n      return \"select\";\n    } else {\n      return \"text\";\n    }\n  }, [component, valueProp]);\n\n  const persistValue = useCallback(\n    (e: Event | React.SyntheticEvent, value: string | null) => {\n      e.preventDefault();\n\n      const valueType = component.schema[valueProp];\n\n      if (value == null || value === \"\") {\n        if (isOptionalType(valueType)) {\n          updateComponent(component, entity, { [valueProp]: undefined });\n          return;\n        }\n\n        const currentValue = getComponentValueStrict(component, entity);\n        setValue(currentValue[valueProp] as string);\n        return;\n      }\n\n      let parsedValue;\n      if (isNumberType(valueType)) {\n        parsedValue = parseInt(value);\n      } else if (isArrayType(valueType)) {\n        parsedValue = value.split(\",\");\n      } else if (valueType === Type.Boolean) {\n        parsedValue = value === \"true\";\n      } else {\n        parsedValue = value;\n      }\n\n      if (hasContract(component) && setContractComponentValue) {\n        const currentValue = getComponentValueStrict(component, entity);\n        setContractComponentValue(entity, component, {\n          ...currentValue,\n          [valueProp]: parsedValue,\n        });\n      } else {\n        updateComponent(component, entity, { [valueProp]: parsedValue });\n      }\n    },\n    [entity, component, valueProp, layers, inputType]\n  );\n\n  return (\n    <ValueForm onSubmit={(e) => persistValue(e, value)}>\n      {isNumberType(component.schema[valueProp]) ? (\n        <DraggableNumberLabel\n          value={value}\n          setValue={setValue}\n          persistValue={persistValue}\n          label={`${startCase(valueProp)}:`}\n        />\n      ) : (\n        <label style={{ cursor: \"pointer\" }} htmlFor={`value-${valueProp}`}>\n          {startCase(valueProp)}:\n        </label>\n      )}\n      {inputType === \"select\" ? (\n        <ComponentBrowserSelect\n          value={value ?? \"\"}\n          onChange={(e) => {\n            setValue(e.target.value);\n            persistValue(e, e.target.value);\n          }}\n        >\n          <option value=\"\">None</option>\n          {[...Object.values(layers)[0].world.getEntities()].map((entity) => (\n            <option key={entity} value={entity}>\n              {entity}\n            </option>\n          ))}\n        </ComponentBrowserSelect>\n      ) : (\n        <ComponentBrowserInput\n          id={`value-${valueProp}`}\n          name={`value-${valueProp}`}\n          type={inputType}\n          value={value ?? \"\"}\n          onFocus={(e) => e.target.select()}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          onBlur={(e) => persistValue(e, value)}\n        />\n      )}\n    </ValueForm>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DraggableNumberLabelContainer } from \"./StyledComponents\";\n\nexport function DraggableNumberLabel({\n  label,\n  value,\n  setValue,\n  persistValue,\n}: {\n  label: string;\n  value: string | null;\n  setValue: (n: string | null) => void;\n  persistValue: (e: Event | React.SyntheticEvent, value: string | null) => void;\n}) {\n  const numberValue = useMemo(() => parseInt(value ?? \"0\"), [value]);\n  const [snapshot, setSnapshot] = useState(numberValue);\n  const [startMouseX, setStartMouseX] = useState(0);\n\n  const onStart = useCallback(\n    (event: React.MouseEvent) => {\n      setStartMouseX(event.clientX);\n      setSnapshot(numberValue);\n    },\n    [numberValue]\n  );\n\n  useEffect(() => {\n    function onMouseMove(this: Document, event: MouseEvent) {\n      if (startMouseX) {\n        const change = Math.round((event.clientX - startMouseX) / 25) + snapshot;\n        setValue(change.toString());\n      }\n    }\n\n    const onDragEnd = (e: Event) => {\n      if (startMouseX) {\n        setStartMouseX(0);\n        persistValue(e, value?.toString() || null);\n      }\n    };\n\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", onDragEnd);\n    return () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", onDragEnd);\n    };\n  }, [startMouseX, setValue, snapshot, value]);\n\n  return <DraggableNumberLabelContainer onMouseDown={onStart}>{label}</DraggableNumberLabelContainer>;\n}\n","import { Component, ComponentValue, Entity, Schema } from \"@latticexyz/recs\";\nimport { AnyComponent } from \"@latticexyz/recs\";\n\nexport type SetContractComponentFunction<T extends Schema> = (\n  entity: Entity,\n  component: Component<T, { contractId: string }>,\n  newValue: ComponentValue<T>\n) => void;\n\nexport type AnyComponentWithContract = Component<Schema, { contractId: string }>;\n\nexport function hasContract(component: AnyComponent): component is AnyComponentWithContract {\n  return component.metadata?.contractId !== undefined;\n}\n","import React from \"react\";\nimport { AnyComponent, ComponentValue, Schema, Layers, Entity } from \"@latticexyz/recs\";\nimport { SetContractComponentFunction } from \"./types\";\nimport { ValueEditor } from \"./ValueEditor\";\n\nexport const ComponentValueEditor = ({\n  entity,\n  component,\n  componentValue,\n  layers,\n  setContractComponentValue,\n}: {\n  entity: Entity;\n  component: AnyComponent;\n  componentValue: ComponentValue<Schema>;\n  layers: Layers;\n  setContractComponentValue?: SetContractComponentFunction<Schema>;\n}) => {\n  return (\n    <div>\n      {Object.keys(componentValue).map((propName) => {\n        return (\n          <ValueEditor\n            key={`value-editor-${propName}-${entity}`}\n            entity={entity}\n            component={component}\n            componentValue={componentValue}\n            valueProp={propName}\n            layers={layers}\n            setContractComponentValue={setContractComponentValue}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport {\n  Layers,\n  setComponent,\n  Type,\n  AnyComponent,\n  Component,\n  World,\n  defineQuery,\n  EntityQueryFragment,\n  Entity,\n} from \"@latticexyz/recs\";\nimport { ComponentBrowserButton, ComponentBrowserInput, SyntaxHighlighterWrapper } from \"../StyledComponents\";\nimport { QueryBuilderForm, QueryShortcutContainer } from \"./StyledComponents\";\nimport * as recs from \"@latticexyz/recs\";\nimport flatten from \"lodash/flatten\";\nimport orderBy from \"lodash/orderBy\";\nimport throttle from \"lodash/throttle\";\nimport { MAX_ENTITIES } from \"../constants\";\nimport { observe } from \"mobx\";\nimport { useShiki } from \"../hooks\";\n\nconst SyntaxHighlighter = ({ code }: { code: string }) => {\n  const { html } = useShiki(code, \"js\");\n\n  if (!html) {\n    return (\n      <SyntaxHighlighterWrapper>\n        <pre className=\"shiki\" />\n      </SyntaxHighlighterWrapper>\n    );\n  }\n\n  return <SyntaxHighlighterWrapper dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nexport const QueryBuilder = ({\n  allEntities,\n  setFilteredEntities,\n  layers,\n  world,\n  devHighlightComponent,\n  clearDevHighlights,\n  setOverflow,\n}: {\n  world: World;\n  layers: Layers;\n  allEntities: Entity[];\n  setFilteredEntities: (es: Entity[]) => void;\n  devHighlightComponent: Component<{ value: Type.OptionalNumber }>;\n  clearDevHighlights: () => void;\n  setOverflow: (overflow: number) => void;\n}) => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [componentFilters, setComponentFilters] = useState<AnyComponent[]>([]);\n  const [isManuallyEditing, setIsManuallyEditing] = useState(true);\n  const [entityQueryText, setEntityQueryText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const allComponents = flatten(Object.values(layers).map((layer) => Object.values(layer.components)));\n\n  const resetFilteredEntities = useCallback(() => {\n    setFilteredEntities([]);\n    setComponentFilters([]);\n    setErrorMessage(\"\");\n  }, [setFilteredEntities, setErrorMessage, allEntities]);\n\n  // If there is no filter present, view no entities.\n  useEffect(() => {\n    if (!entityQueryText) {\n      resetFilteredEntities();\n    }\n  }, [setFilteredEntities, resetFilteredEntities, allEntities, entityQueryText]);\n\n  // If the user is not manually typing a query, build a query\n  // based on the selected Component filters\n  useEffect(() => {\n    if (isManuallyEditing) return;\n\n    const hasFilters = componentFilters.map((c) => `Has(${c.id})`);\n    const query = `[${hasFilters.join(\",\")}]`;\n    setEntityQueryText(query);\n  }, [componentFilters, isManuallyEditing]);\n\n  // When the user edits a query manually,\n  // clear the selectable filters\n  const editQuery = useCallback((text: string) => {\n    setIsManuallyEditing(true);\n    setEntityQueryText(text);\n    setComponentFilters([]);\n  }, []);\n\n  const cancelObserver = useRef<() => void>(() => void 0);\n  // Cancel outstanding observers on unmount\n  useEffect(() => {\n    return () => {\n      if (cancelObserver.current) cancelObserver.current();\n    };\n  }, []);\n\n  const executeFilter = useCallback(\n    (e: React.SyntheticEvent) => {\n      e.preventDefault();\n      setErrorMessage(\"\");\n\n      // Do not throw an error if there is no query\n      if (!entityQueryText) {\n        resetFilteredEntities();\n        return;\n      }\n\n      // Create local variables that include all the things necessary to\n      // construct custom Entity queries.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const q = { ...recs };\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const c = Object.values(layers).reduce<Record<string, AnyComponent>>((allComponents, layer) => {\n        for (const [componentName, component] of Object.entries(layer.components)) {\n          allComponents[componentName] = component;\n        }\n        return allComponents;\n      }, {});\n\n      try {\n        const assignQueryVars = Object.keys(q)\n          .map((key) => `const ${key} = q[\"${key}\"]; `)\n          .join(\"\");\n\n        const assignComponentVars = Object.keys(c)\n          .map((key) => `const ${key} = c[\"${key}\"]; `)\n          .join(\"\");\n\n        const evalString = `\n        (() => {\n          ${assignQueryVars}\n          ${assignComponentVars}\n          return (${entityQueryText});\n        })()\n        `;\n\n        const queryArray = eval(evalString) as EntityQueryFragment[];\n        if (!queryArray || queryArray.length === 0 || !Array.isArray(queryArray)) {\n          resetFilteredEntities();\n          throw new Error(\"Invalid query\");\n        }\n\n        cancelObserver.current();\n        const queryResult = defineQuery(queryArray, { runOnInit: true });\n        const subscription = queryResult.update$.subscribe();\n        const selectEntities = throttle(\n          () => {\n            const selectedEntities = [...queryResult.matching].slice(0, MAX_ENTITIES);\n            setOverflow(queryResult.matching.size - selectedEntities.length);\n            setFilteredEntities(selectedEntities);\n            clearDevHighlights();\n            selectedEntities.forEach((idx) => setComponent(devHighlightComponent, idx, { value: 0x0000ff }));\n          },\n          1000,\n          { leading: true }\n        );\n        selectEntities();\n        const cancelObserve = observe(queryResult.matching, selectEntities);\n        cancelObserver.current = () => {\n          cancelObserve();\n          selectEntities.cancel();\n          subscription?.unsubscribe();\n        };\n      } catch (e: unknown) {\n        setErrorMessage((e as Error).message);\n        console.error(e);\n      }\n    },\n    [entityQueryText, setEntityQueryText, setFilteredEntities, resetFilteredEntities, setErrorMessage, allEntities]\n  );\n\n  return (\n    <>\n      <QueryBuilderForm onSubmit={executeFilter}>\n        <SyntaxHighlighter code={entityQueryText} />\n        {errorMessage && <SyntaxHighlighter code={`Error: ${errorMessage}`} />}\n        <label style={{ cursor: \"pointer\" }} htmlFor={`query-input`}>\n          <h3>Filter Entities</h3>\n        </label>\n        <ComponentBrowserInput\n          id=\"query-input\"\n          ref={queryInputRef}\n          placeholder=\"No filter applied\"\n          style={{ width: \"100%\", color: \"white\" }}\n          type=\"text\"\n          value={entityQueryText}\n          onChange={(e) => {\n            if (errorMessage) setErrorMessage(\"\");\n            editQuery(e.target.value);\n          }}\n          onFocus={(e) => e.target.select()}\n        />\n      </QueryBuilderForm>\n\n      <div\n        style={{\n          padding: \"8px\",\n          paddingTop: 0,\n          borderBottom: \"2px grey solid\",\n        }}\n      >\n        <h3>Filter by Component</h3>\n        <QueryShortcutContainer style={{ margin: \"8px auto\" }}>\n          {orderBy(allComponents, (c) => c.id)\n            .filter((c) => !c.id.includes(\"-\"))\n            .map((component) => {\n              const filterActive = componentFilters.includes(component);\n\n              return (\n                <ComponentBrowserButton\n                  key={`filter-toggle-${component.id}`}\n                  active={String(filterActive)}\n                  onClick={() => {\n                    setIsManuallyEditing(false);\n                    queryInputRef.current?.focus();\n\n                    if (filterActive) {\n                      setComponentFilters((f) => f.filter((f) => f !== component));\n                    } else {\n                      setComponentFilters((f) => [...f, component]);\n                    }\n                  }}\n                >\n                  Has({component.id})\n                </ComponentBrowserButton>\n              );\n            })}\n        </QueryShortcutContainer>\n      </div>\n    </>\n  );\n};\n","import { styled } from \"goober\";\n\nexport const QueryBuilderForm = styled(\"form\")`\n  padding: 8px;\n  border-bottom: 2px grey solid;\n  margin-bottom: 8px;\n  width: 100%;\n`;\n\nexport const QueryShortcutContainer = styled(\"div\")`\n  flex: \"row wrap\";\n  margin-top: \"8px\";\n  height: 200px;\n  overflow: auto;\n`;\n","import { Component, Has, removeComponent } from \"@latticexyz/recs\";\nimport { useQuery } from \"@latticexyz/std-client\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport type { Lang, IThemedToken } from \"shiki\";\n\nexport function useClearDevHighlights(devHighlightComponent: Component) {\n  const highlightedEntities = useQuery([Has(devHighlightComponent)]);\n\n  return useCallback(() => {\n    if (!highlightedEntities) return;\n    for (const entity of highlightedEntities) {\n      removeComponent(devHighlightComponent, entity);\n    }\n  }, [highlightedEntities]);\n}\n\nexport function useShiki(code: string, lang: Lang) {\n  const [html, htmlSet] = useState<string>();\n  const [tokens, tokenSet] = useState<IThemedToken[][]>();\n\n  useEffect(() => {\n    async function handler() {\n      try {\n        const shiki = await import(\"shiki\");\n\n        shiki.setCDN(\"https://unpkg.com/shiki/\");\n\n        const highlighter = await shiki.getHighlighter({ theme: \"dracula-soft\", langs: [lang] });\n\n        htmlSet(highlighter.codeToHtml(code, { lang }));\n        tokenSet(highlighter.codeToThemedTokens(code, lang));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    handler();\n  }, [code]);\n\n  return {\n    html,\n    tokens,\n  };\n}\n","import { defineComponent, Type, World } from \"@latticexyz/recs\";\n\nexport function createBrowserDevComponents(world: World) {\n  const devHighlightComponent = defineComponent(world, {\n    value: Type.OptionalNumber,\n  });\n\n  const hoverHighlightComponent = defineComponent(world, {\n    x: Type.OptionalNumber,\n    y: Type.OptionalNumber,\n  });\n\n  return {\n    devHighlightComponent,\n    hoverHighlightComponent,\n  };\n}\n"],"mappings":"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","names":["useState","setup","styled","React","createElement","ComponentBrowserInput","ComponentBrowserButton","active","ComponentBrowserSelect","ValueForm","ComponentEditorContainer","ComponentTitle","EntityEditorContainer","BrowserContainer","DraggableNumberLabelContainer","SmallHeadline","Collapse","opened","SyntaxHighlighterWrapper","useEffect","useState","setComponent","getEntityComponents","removeComponent","useState","useEffect","useCallback","useMemo","getComponentValueStrict","Type","updateComponent","isArrayType","isEntityType","isNumberType","isOptionalType","startCase","useMemo","useCallback","useEffect","useState","jsx","DraggableNumberLabel","label","value","setValue","persistValue","numberValue","useMemo","snapshot","setSnapshot","useState","startMouseX","setStartMouseX","onStart","useCallback","event","useEffect","onMouseMove","change","onDragEnd","e","DraggableNumberLabelContainer","hasContract","component","jsx","jsxs","ValueEditor","entity","component","componentValue","valueProp","layers","setContractComponentValue","value","setValue","useState","useEffect","v","inputType","useMemo","type","isNumberType","isEntityType","persistValue","useCallback","e","valueType","isOptionalType","updateComponent","currentValue","getComponentValueStrict","parsedValue","isArrayType","Type","hasContract","ValueForm","DraggableNumberLabel","startCase","ComponentBrowserSelect","ComponentBrowserInput","jsx","ComponentValueEditor","entity","component","componentValue","layers","setContractComponentValue","propName","ValueEditor","useComponentValueStream","jsx","jsxs","ComponentEditor","entity","component","layers","setContractComponentValue","value","ComponentEditorContainer","ComponentTitle","ComponentBrowserButton","removeComponent","hasContract","ComponentValueEditor","observer","Fragment","jsx","jsxs","EntityEditor","entityId","layers","setContractComponentValue","devHighlightComponent","world","clearDevHighlights","opened","setOpened","useState","entityComponents","setEntityComponents","useEffect","components","getEntityComponents","EntityEditorContainer","setComponent","ComponentBrowserButton","e","Collapse","c","ComponentEditor","useState","useRef","useCallback","useEffect","setComponent","defineQuery","styled","QueryBuilderForm","QueryShortcutContainer","recs","flatten","orderBy","throttle","observe","Has","removeComponent","useQuery","useCallback","useEffect","useState","useClearDevHighlights","devHighlightComponent","highlightedEntities","entity","useShiki","code","lang","html","htmlSet","tokens","tokenSet","handler","shiki","highlighter","error","Fragment","jsx","jsxs","SyntaxHighlighter","code","html","useShiki","SyntaxHighlighterWrapper","QueryBuilder","useRef","useState","flatten","layer","useCallback","useEffect","query","c","text","recs","allComponents","componentName","component","key","defineQuery","throttle","selectedEntities","idx","setComponent","observe","e","QueryBuilderForm","ComponentBrowserInput","QueryShortcutContainer","orderBy","filterActive","ComponentBrowserButton","f","observer","jsx","jsxs","Browser","layers","setContractComponentValue","world","devHighlightComponent","filteredEntities","setFilteredEntities","useState","overflow","setOverflow","clearDevHighlights","useClearDevHighlights","BrowserContainer","QueryBuilder","SmallHeadline","entity","EntityEditor","defineComponent","Type","createBrowserDevComponents","world","devHighlightComponent","hoverHighlightComponent"]}